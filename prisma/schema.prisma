generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comment {
  id        String   @id @default(uuid())
  taskId    String
  authorId  String
  content   String
  createdAt DateTime @default(now())
  user      user     @relation(fields: [authorId], references: [id])
  task      task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
}

model team {
  id        String   @id @default(uuid())
  name      String
  members   user[]   @relation("TeamMember")
  tasks     task[]
  ownerId   String
  owner     user     @relation("TeamOwner", fields: [ownerId], references: [id])
  createdAt DateTime @default(now())
}

model task {
  id           String          @id @default(uuid())
  title        String
  description  String
  state        estado_tarea    @default(pendiente)
  priority     prioridad_tarea
  expiringDate DateTime
  ownerId      String
  createdAt    DateTime        @default(now())
  asignedId    String?
  comentario   comment[]
  owner        user            @relation(name: "taskCreator", fields: [ownerId], references: [id])
  asigned      user?           @relation(name: "asignedUser", fields: [asignedId], references: [id])
  team         team?           @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId       String?
}

model user {
  id            String    @id @default(uuid())
  name          String
  password      String
  refreshToken  String?   @unique
  email         String    @unique
  photoURL      String?
  comentario    comment[]
  createdTasks  task[]    @relation("taskCreator")
  asignedTasks  task[]    @relation("asignedUser")
  createdTeams  team[]    @relation("TeamOwner")
  memberOfTeams team[]    @relation("TeamMember")

  @@index([email], name: "idx_user_email")
  @@index([refreshToken], name: "idx_user_refreshToken")
}


enum estado_tarea {
  pendiente
  progreso
  completada
}

enum prioridad_tarea {
  baja
  media
  alta
}
